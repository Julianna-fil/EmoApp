import streamlit as st
import io
from PIL import Image
import numpy as np
import cv2
from model import Generator
from torchvision import transforms
import torch

st.set_page_config(
    page_title="Emotion App!",
    page_icon="üòé",
    layout="wide"
)
inv_normalize = transforms.Normalize(
    mean=[-0.485/0.229, -0.456/0.224, -0.406/0.225],
    std=[1/0.229, 1/0.224, 1/0.225]
)

st.markdown("### –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:")
st.markdown("1) –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ª—É—á–∏–≤—à–µ–µ—Å—è –Ω–µ–¥–∞–≤–Ω–æ —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –≤–∞—à–∏ –º—ã—Å–ª–∏")
st.markdown("2) –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –≤—ã–≤–µ–¥–µ—Ç —Ñ–æ—Ç–æ –∞–≤—Ç–æ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º")
st.markdown("3) –ù–æ –Ω–µ—Ç, —ç—Ç–æ –Ω–µ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ç–æ. –≠—Ç–æ —Ä–∞–±–æ—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª–∏! –ù–µ –≤–µ—Ä–∏—Ç–µ? –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—ë —Ñ–æ—Ç–æ!)")

st.markdown("–°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É —Ñ–æ—Ç–æ: –ª—É—á—à–µ –≤—Å–µ–≥–æ –±—Ä–∞—Ç—å —Å–µ–ª—Ñ–∏! –ò–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –≥–¥–µ –ª–∏—Ü–æ –∫—Ä—É–ø–Ω—ã–º –ø–ª–∞–Ω–æ–º. –ß–µ–º —Å–∏–ª—å–Ω–µ–µ —Ñ–æ—Ç–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —ç—Ç–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è, —Ç–µ–º —Ö—É–∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")
# st.markdown("<img width=200px src='https://rozetked.me/images/uploads/dwoilp3BVjlE.jpg'>", unsafe_allow_html=True)
# ^-- –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–∫—Å—Ç, –∫–∞—Ä—Ç–∏–Ω–∫–∏, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ html - –≤—Å—ë –∫–∞–∫ –≤ jupyter

text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:")
# img =  st.image("testJulifil.jpg")
# ^-- –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ. –í –ø–æ–ª–µ text –ª–µ–∂–∏—Ç —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–∞–º –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
# st.markdown("### Hello, world!")
from transformers import pipeline

trans = pipeline('translation', model = "Helsinki-NLP/opus-mt-ru-en")
classifier = pipeline('sentiment-analysis', model="distilbert-base-uncased-finetuned-sst-2-english")
res = classifier(trans(text)[0]["translation_text"])
# st.markdown(res)
if res[0]['label'] != 'POSITIVE':
    labels = torch.Tensor([[0, 0]])
    # st.markdown("–Ø —Å–æ—Ç—Ä—É —É–ª—ã–±–∫—É —Å —ç—Ç–æ–≥–æ –ª–∏—Ü–∞!")
else:
    labels = torch.Tensor([[1, 1]])
    # st.markdown("–Ø —Å–¥–µ–ª–∞—é —Ñ–æ—Ç–æ —É–ª—ã–±—á–∏–≤—ã–º!")

# st.markdown(labels)
file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ:", type=['png','jpeg','jpg'])
if file:

    image_data = file.getvalue()
    # –ü–æ–∫–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ Web-—Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ Streamlit
    # st.image(image_data)
    # –í–æ–∑–≤—Ä–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ PIL
    image = Image.open(io.BytesIO(image_data))
    # image = Image.open("test"+username+".jpg").convert('RGB')


else:
    image = Image.open("testJulifil.jpg")


transform=transforms.Compose([
    transforms.Resize(64*4),
    transforms.CenterCrop(64*4),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406],
                         std=[0.229, 0.224, 0.225])
])
img = transform(image)
img = img.unsqueeze(0)
generator = torch.load("gen_model.pt", map_location=torch.device('cpu'))
# st.write(int(labels.sum()) < 1)
# if int(labels.sum()) > 1:
#     st.markdown("–Ø —Å–æ—Ç—Ä—É —É–ª—ã–±–∫—É —Å —ç—Ç–æ–≥–æ –ª–∏—Ü–∞!")
# elif int(labels.sum()) < 1:
#     st.markdown("–Ø —Å–¥–µ–ª–∞—é —Ñ–æ—Ç–æ —É–ª—ã–±—á–∏–≤—ã–º!")
x_f2 = generator(img, labels)
res = inv_normalize(x_f2[0]).permute(1,2,0).detach().cpu().numpy()
res = res# *255 #
res = cv2.normalize(res, None, 220, 40, cv2.NORM_MINMAX, cv2.CV_8U)
res = res[:,:,::-1]

# plt.imshow(res)
# cv2.imshow("res", res)
username = "0"
cv2.imwrite("res"+username+".jpg", res)
img = st.image(r"res"+username+".jpg")
# x = np.array(img)
# cv2.imwrite("downloaded.jpeg", x)
# st.write(x.mean())
# import cv2
# foto = cv2.imread(file)
# cv2.imwrite(foto, "res.png")
# –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–¥–µ–ª–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ, –Ω–∞ –ø–æ—Ç–µ—Ö—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é